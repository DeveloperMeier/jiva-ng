<project xmlns:ivy="antlib:org.apache.ivy.ant" name="jiva" default="jar" basedir=".">
	<property name="scala.version" value="2.9.1"/>
	<property name="scala.home" value="." />
	<property name="scala-compiler.jar" value="${scala.home}/lib/scala-compiler-${scala.version}.jar" />
	<property name="scala-library.jar" value="${scala.home}/lib/scala-library-${scala.version}.jar" />

	<property name="build" location="target" />
	<property name="build.classes" location="${build}/classes" />
	<property name="work" location="work" />
	<property name="dist" location="dist" />
	<property name="test.lib" location="lib" />
	<property name="src.main.java" location="src/main/java" />
	<property name="src.test.java" location="src/test/java" />
	<property name="src.main.scala" location="src/main/scala" />
	<property name="src.test.scala" location="src/test/scala" />

	<path id="classpath">
		<pathelement location="${build.classes}" />
	</path>

	<path id="test.classpath">
		<path refid="classpath"/>
		<fileset dir="${test.lib}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="scala.classpath">
		<pathelement location="${scala-compiler.jar}" />
		<pathelement location="${scala-library.jar}" />
	</path>

	<target name="clean" description="clean up">
		<delete dir="${build}" />
		<delete dir="${test.lib}" />
	</target>

	<target name="resolve" description="--> retrieve dependencies with ivy">
		<ivy:settings file="ivysettings.xml" />
		<ivy:retrieve />
	</target>

	<target name="init" depends="resolve">
		<available file="${scala-compiler.jar}" property="scala.tools.present" />
		<fail message="Unable to locate Scala tools; this build file assumes - 
			that the lib dir is present right under SCALA_HOME. Is that accurate?" unless="scala.tools.present" />

		<taskdef resource="scala/tools/ant/antlib.xml">
			<classpath refid="scala.classpath" />
		</taskdef>

		<mkdir dir="${build}" />
		<mkdir dir="${build.classes}" />
		<mkdir dir="${work}" />
	</target>

	<target name="compile-j" depends="init" description="Compiles all Jiva's Java code">
		<javac srcdir="${src.main.java}" destdir="${build.classes}" classpathref="classpath" />
		<javac srcdir="${src.test.java}" destdir="${build.classes}" classpathref="test.classpath" />
	</target>

	<target name="compile-s" depends="compile-j" description="Compiles all Jiva's Scala code">
		<scalac srcdir="${src.main.scala}" destdir="${build.classes}" force="changed" addparams="">
			<classpath>
				<path refid="scala.classpath" />
				<path refid="classpath" />
			</classpath>
			<include name="**/*.scala" />
		</scalac>
		<scalac srcdir="${src.test.scala}" destdir="${build.classes}" force="changed" addparams="">
			<classpath>
				<path refid="scala.classpath" />
				<path refid="test.classpath" />
			</classpath>
			<include name="**/*.scala" />
		</scalac>
	</target>

	<target name="test" depends="compile-s">
		<junit printsummary="yes" showoutput="yes">
			<formatter type="plain" />
			<test name="net.kogics.AllTest" fork="yes" haltonfailure="yes" outfile="testreport" />
			<classpath>
				<path refid="scala.classpath" />
				<path refid="test.classpath" />
			</classpath>
		</junit>
	</target>

	<target name="jar" depends="test" description="Creates Jiva's main JAR file">
		<jar jarfile="${build}/jiva.jar" basedir="${build.classes}" />
	</target>
</project>
